DROP DATABASE IF EXISTS `nacos_config`;

CREATE DATABASE  `nacos_config` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

USE nacos_config;

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info` (
                               `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
                               `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
                               `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `content` longtext CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'content',
                               `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
                               `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
                               `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
                               `src_user` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT 'source user',
                               `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
                               `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
                               `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
                               `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8_bin,
                               `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT '秘钥',
                               PRIMARY KEY (`id`),
                               UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=54 DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info';

-- ----------------------------
-- Records of config_info
-- ----------------------------
BEGIN;
INSERT INTO `config_info` VALUES (12, 'jcloud-upms.yml', 'DEFAULT_GROUP', '\nspring:\n    mvc:\n        pathmatch:\n            #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n            matching-strategy: ant_path_matcher\n    config:\n        import:\n            - optional:nacos:seata-client-test.yml\n    cloud:\n        sentinel:\n            datasource:\n                ds1:\n                    nacos:\n                        # nacos dataId\n                        data-id: jwk-sentinel\n                        # 数据格式-json\n                        data-type: json\n                        # nacos 配置组\n                        group-id: DEFAULT_GROUP\n                        # 限流模式-流控模式\n                        rule-type: flow\n                        # nacos url\n                        server-addr: 127.0.0.1:8848\n            # 懒加载\n            eager: true\n            enabled: true\n            transport:\n                # 指定控制台和客户端交互的端口。默认是8719\n                # port: 8094\n                #指定sentinel控制台\n                dashboard: 127.0.0.1:8080\n                # 指定客户端ip\n                # clientIp: 192.168.0.107\n    datasource:\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        druid:\n            #连接池初始化大小\n            initial-size: 5\n            #最大连接数\n            max-active: 20\n            #最小空闲连接数\n            min-idle: 10\n            stat-view-servlet:\n                #访问监控网页的登录用户名和密码\n                login-password: druid\n                login-username: druid\n            web-stat-filter:\n                #不统计这些请求数据\n                exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n        # mysql配置\n        url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n        username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n        password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n    main:\n        #开启允许重复注册，或者在@FeignClient指定contextId，\n        # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n        allow-bean-definition-overriding: true\n        allow-circular-references: true\n    rabbitmq:\n        addresses: 127.0.0.1\n        password: guest\n        username: guest\n        virtual-host: /\n        # publisher-confirm-type: correlated\n        # publisher-returns: true\n    redis:\n        host: 127.0.0.1\n\n    servlet:\n        multipart:\n            #开启文件上传\n            enabled: true\n            #限制文件上传大小为10M\n            max-file-size: 100MB\n    # thymeleaf配置\n    thymeleaf:\n        cache: false\n        suffix: .html\n\n\n\nknife4j:\n    # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n    # 是否开启Knife4j增强模式\n    enable: true\n    setting:\n        # 是否开启动态参数调试功能\n        enableDynamicParameter: true\n        # 是否显示Footer\n        enableFooter: false\n        # 前端UI的个性化配置\n        enableSwaggerModels: true\n        # 是否显示OpenAPI规范\n        enableOpenApi: false\n        enableVersion: true\n        swaggerModelName: 响应实体对象\n\nmybatis-plus:\n    configuration:\n        # SQL查询超时时间(单位：秒)\n        default-statement-timeout: 15\n        # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n        map-underscore-to-camel-case: true\n    global-config:\n        # 关闭图标打印\n        banner: false\n        #dao层xml路径\n    mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n    # config-location: classpath:mybatis-config.xml\nfeign:\n    client:\n        config:\n            default:\n                connect-timeout: 120000\n                read-timeout: 120000\n    sentinel:\n        enabled: true\n\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n    encryptor:\n        password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '8d06be7bc8953ba801192f99abdd77c1', '2022-10-15 09:16:31', '2022-11-10 04:14:32', 'nacos', '172.17.0.1', '', '', '', '', '', 'yaml', '', NULL);
INSERT INTO `config_info` VALUES (13, 'jcloud-admin.yml', 'DEFAULT_GROUP', 'spring:\n  security:\n    user:\n      name: admin\n      password: admin\nmanagement:\n  endpoint:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'e6967d5d7eed37f680a6c53820e9124f', '2022-10-15 09:25:39', '2022-10-15 13:51:08', 'nacos', '112.80.202.232', '', '', '', '', '', 'yaml', '', NULL);
INSERT INTO `config_info` VALUES (16, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\n\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n  ignore-clients:\n    - test\n    - client\n    - jiwkClient\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '7387388355a9644ae8817a739caa5bf0', '2022-10-15 13:23:51', '2022-11-22 06:08:37', 'nacos', '172.17.0.1', '', '', '', '', '', 'yaml', '', NULL);
INSERT INTO `config_info` VALUES (26, 'jcloud-knife4j.yml', 'DEFAULT_GROUP', 'spring:\r\n  mvc:\r\n    pathmatch:\r\n      matching-strategy: ant_path_matcher\r\n\r\n# 网关地址\r\ngateway-uri: 127.0.0.1:8091\r\nknife4j:\r\n  enableAggregation: true\r\n  cloud:\r\n    enable: true\r\n    routes:\r\n      - name: 测试服务\r\n        uri: ${gateway-uri}\r\n        location: /v2/api-docs?group=jwk-test\r\n        swaggerVersion: 2.0\r\n#      - name: 运维小程序服务\r\n#        uri: ${gateway-uri}\r\n#        location: /op/v2/api-docs\r\n#      - name: 统计服务\r\n#        uri: ${gateway-uri}\r\n#        location: /statistics/v2/api-docs\r\n#      - name: 电子秤服务\r\n#        uri: ${gateway-uri}\r\n#        location: /electronic-scale/v2/api-docs\r\n#      - name: 菜篮子大小服务\r\n#        uri: ${gateway-uri}\r\n#        location: /customer/v2/api-docs\r\n#      - name: 广宣服务\r\n#        uri: ${gateway-uri}\r\n#        location: /extension/v2/api-docs\r\n#      - name: 收银台服务\r\n#        uri: ${gateway-uri}\r\n#        location: /cashier/v2/api-docs\r\n#      - name: 媒体分发服务\r\n#        uri: ${gateway-uri}\r\n#        location: /mediaPublish/v2/api-docs\r\n#      - name: 访客服务\r\n#        uri: ${gateway-uri}\r\n#        location: /visitor/v2/api-docs\r\n#      - name: 支付服务\r\n#        uri: ${gateway-uri}\r\n#        location: /pay/v2/api-docs\r\n\r\nmanagement:\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n    web:\r\n      exposure:\r\n        include: \'*\'', '366fe79da80c90ce2145df2fce6a1b95', '2022-10-15 14:36:37', '2022-10-15 14:36:37', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
INSERT INTO `config_info` VALUES (27, 'jcloud-uaa.yml', 'DEFAULT_GROUP', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 127.0.0.1:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 127.0.0.1:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 127.0.0.1\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  swagger:\n    description: Uaa服务\n    group-name: ${spring.application.name}\n    title: ${spring.application.name}\n  auth: \n    default-password: 1234567\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin/**,/inner/**,/login,/oauth/**,/api,/jwk/**,/actuator/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'aec062bbe95aed3457247f4cf0ced8be', '2022-10-15 14:52:43', '2022-11-24 20:30:43', 'nacos', '172.17.0.1', '', '', '', '', '', 'yaml', '', NULL);
INSERT INTO `config_info` VALUES (32, 'jcloud-sentinel', 'DEFAULT_GROUP', '// resource：资源名，即限流规则的作用对象。\r\n// limitApp：流控针对的调用来源，若为 default 则不区分调用来源。\r\n// grade：限流阈值类型，QPS 或线程数模式，0代表根据并发数量来限流，1代表根据QPS来进行流量控制。\r\n// count：限流阈值\r\n// strategy：判断的根据是资源自身，还是根据其它关联资源 (refResource)，还是根据链路入口\r\n// controlBehavior：流控效果（直接拒绝 / 排队等待 / 慢启动模式）\r\n// clusterMode：是否为集群模式\r\n[\r\n    {\r\n        \"resource\": \"/web/test\",\r\n        \"limitApp\": \"default\",\r\n        \"grade\": 1,\r\n        \"count\": 1,\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0,\r\n        \"clusterMode\": false\r\n    }\r\n]', '14ab63df38fa94ebe41c8801968c55b4', '2022-10-15 15:28:37', '2022-10-15 15:28:37', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
INSERT INTO `config_info` VALUES (33, 'jcloud-routes', 'DEFAULT_GROUP', 'routes:\r\n  - id: baidu\r\n    uri: http://www.baidu.com\r\n    predicates:\r\n      - Path=/demo\r\n      - RemoteAddr=127.0.0.1\r\n    filters:\r\n      - StripPrefix=1\r\n  - id: content-center\r\n    uri: lb://content-center\r\n    predicates:\r\n      - Path=/**\r\n      - RemoteAddr=192.168.1.1/24', 'a58d8779ac78f4f4da9347d670bc0e78', '2022-10-15 15:29:16', '2022-10-15 15:29:16', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
INSERT INTO `config_info` VALUES (34, 'seata-server.properties', 'DEFAULT_GROUP', 'service.vgroupMapping.jcloud_tx_group=default\r\n\r\nservice.enableDegrade=false\r\nservice.disableGlobalTransaction=false\r\n\r\n#Transaction storage configuration, only for the server. The file, DB, and redis configuration values are optional.\r\nstore.mode=db\r\nstore.lock.mode=db\r\nstore.session.mode=db\r\n#Used for password encryption\r\nstore.publicKey=\r\n\r\n#These configurations are required if the `store mode` is `db`. If `store.mode,store.lock.mode,store.session.mode` are not equal to `db`, you can remove the configuration block.\r\nstore.db.datasource=druid\r\nstore.db.dbType=mysql\r\nstore.db.driverClassName=com.mysql.cj.jdbc.Driver\r\nstore.db.url=jdbc:mysql://47.241.180.241:3306/seata?useUnicode=true&rewriteBatchedStatements=true\r\nstore.db.user=root\r\nstore.db.password=Awert159\r\nstore.db.minConn=5\r\nstore.db.maxConn=30\r\nstore.db.globalTable=global_table\r\nstore.db.branchTable=branch_table\r\nstore.db.distributedLockTable=distributed_lock\r\nstore.db.queryLimit=100\r\nstore.db.lockTable=lock_table\r\nstore.db.maxWait=5000\r\n\r\n#Transaction rule configuration, only for the server\r\nserver.recovery.committingRetryPeriod=1000\r\nserver.recovery.asynCommittingRetryPeriod=1000\r\nserver.recovery.rollbackingRetryPeriod=1000\r\nserver.recovery.timeoutRetryPeriod=1000\r\nserver.maxCommitRetryTimeout=-1\r\nserver.maxRollbackRetryTimeout=-1\r\nserver.rollbackRetryTimeoutUnlockEnable=false\r\nserver.distributedLockExpireTime=10000\r\nserver.xaerNotaRetryTimeout=60000\r\nserver.session.branchAsyncQueueSize=5000\r\nserver.session.enableBranchAsyncRemove=false\r\n\r\n#Transaction rule configuration, only for the client\r\nclient.rm.asyncCommitBufferLimit=10000\r\nclient.rm.lock.retryInterval=10\r\nclient.rm.lock.retryTimes=30\r\nclient.rm.lock.retryPolicyBranchRollbackOnConflict=true\r\nclient.rm.reportRetryCount=5\r\nclient.rm.tableMetaCheckEnable=true\r\nclient.rm.tableMetaCheckerInterval=60000\r\nclient.rm.sqlParserType=druid\r\nclient.rm.reportSuccessEnable=false\r\nclient.rm.sagaBranchRegisterEnable=false\r\nclient.rm.sagaJsonParser=fastjson\r\nclient.rm.tccActionInterceptorOrder=-2147482648\r\nclient.tm.commitRetryCount=5\r\nclient.tm.rollbackRetryCount=5\r\nclient.tm.defaultGlobalTransactionTimeout=60000\r\nclient.tm.degradeCheck=false\r\nclient.tm.degradeCheckAllowTimes=10\r\nclient.tm.degradeCheckPeriod=2000\r\nclient.tm.interceptorOrder=-2147482648\r\nclient.undo.dataValidation=true\r\nclient.undo.logSerialization=jackson\r\nclient.undo.onlyCareUpdateColumns=true\r\nserver.undo.logSaveDays=7\r\nserver.undo.logDeletePeriod=86400000\r\nclient.undo.logTable=undo_log\r\nclient.undo.compress.enable=true\r\nclient.undo.compress.type=zip\r\nclient.undo.compress.threshold=64k\r\n\r\n#For TCC transaction mode\r\ntcc.fence.logTableName=tcc_fence_log\r\ntcc.fence.cleanPeriod=1h\r\n\r\n#Log rule configuration, for client and server\r\nlog.exceptionRate=100\r\n\r\n#Metrics configuration, only for the server\r\nmetrics.enabled=false\r\nmetrics.registryType=compact\r\nmetrics.exporterList=prometheus\r\nmetrics.exporterPrometheusPort=9898\r\n\r\n#For details about configuration items, see https://seata.io/zh-cn/docs/user/configurations.html\r\n#Transport configuration, for client and server\r\ntransport.type=TCP\r\ntransport.server=NIO\r\ntransport.heartbeat=true\r\ntransport.enableTmClientBatchSendRequest=false\r\ntransport.enableRmClientBatchSendRequest=true\r\ntransport.enableTcServerBatchSendResponse=false\r\ntransport.rpcRmRequestTimeout=30000\r\ntransport.rpcTmRequestTimeout=30000\r\ntransport.rpcTcRequestTimeout=30000\r\ntransport.threadFactory.bossThreadPrefix=NettyBoss\r\ntransport.threadFactory.workerThreadPrefix=NettyServerNIOWorker\r\ntransport.threadFactory.serverExecutorThreadPrefix=NettyServerBizHandler\r\ntransport.threadFactory.shareBossWorker=false\r\ntransport.threadFactory.clientSelectorThreadPrefix=NettyClientSelector\r\ntransport.threadFactory.clientSelectorThreadSize=1\r\ntransport.threadFactory.clientWorkerThreadPrefix=NettyClientWorkerThread\r\ntransport.threadFactory.bossThreadSize=1\r\ntransport.threadFactory.workerThreadSize=default\r\ntransport.shutdown.wait=3\r\ntransport.serialization=seata\r\ntransport.compressor=none', '469bc9959c30742542aff29ff8c31011', '2022-10-15 15:30:05', '2022-10-15 15:30:05', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'properties', NULL, NULL);
INSERT INTO `config_info` VALUES (35, 'seata-client-test.yml', 'DEFAULT_GROUP', '# seata配置\r\nseata:\r\n  enabled: true\r\n  application-id: jcloud-seata-test\r\n  # Seata 事务组编号，此处需于 seata 相同\r\n  tx-service-group: jcloud_tx_group\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      # nacos ip地址\r\n      server-addr: 47.241.180.241:8848\r\n      group: DEFAULT_GROUP\r\n      data-id: seata-server.properties # 读取 nacos seata 配置\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      application: seata-server # seata 服务名\r\n      # nacos ip地址\r\n      server-addr: 47.241.180.241:8848\r\n      group: DEFAULT_GROUP', 'c149f8b3ecea225f38d897bf582f3f0c', '2022-10-15 15:30:31', '2022-10-15 15:30:31', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
INSERT INTO `config_info` VALUES (36, 'seata-client-umps.yml', 'DEFAULT_GROUP', '# seata配置\r\nseata:\r\n  enabled: true\r\n  application-id: jcloud-seata-upms\r\n  # Seata 事务组编号，此处需于 seata 相同\r\n  tx-service-group: jcloud_tx_group\r\n  config:\r\n    type: nacos\r\n    nacos:\r\n      # nacos ip地址\r\n      server-addr: 47.241.180.241:8848\r\n      group: DEFAULT_GROUP\r\n      data-id: seata-server.properties # 读取 nacos seata 配置\r\n  registry:\r\n    type: nacos\r\n    nacos:\r\n      application: seata-server # seata 服务名\r\n      # nacos ip地址\r\n      server-addr: 47.241.180.241:8848\r\n      group: DEFAULT_GROUP', '62218340ce811b39d59b56805db13471', '2022-10-15 15:30:51', '2022-10-15 15:30:51', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
INSERT INTO `config_info` VALUES (37, 'jmirco_hertz_test', 'DEFAULT_GROUP', '\r\n# 服务配置，配置IP、端口等\r\nserver:\r\n  host: 0.0.0.0 # 如需要任意IP访问，则填写:“0.0.0.0” 或 “::”\r\n  port: 21080 # 如果随机生成，则填写:“0”\r\n  context: / # 如直接通过IP+端口访问，则填写:“” 或 “/”\r\n  data: ./data # 数据存储目录，存储文件等\r\n\r\nmysql:\r\n  host: 47.241.180.241\r\n  port: 3306\r\n  database: jcloud\r\n  username: root\r\n  password: Awert159\r\n\r\n# 日志配置\r\nlog:\r\n  filename: ./log\r\n  maxSize: 100 # 文件大小单位M\r\n  maxAge: 10 # 保留旧文件的最大天数\r\n  maxBackups: 10 # 最多几个文件，在进行切割之前，日志文件的最大大小（以MB为单位）\r\n  level: info # 级别，debug，info，warn，error\r\n  compress: false # 是否压缩/归档旧文件', '04315a13719b8e0093172021b76aab82', '2022-10-15 15:31:18', '2022-10-15 15:31:18', 'nacos', '112.80.202.232', '', '', NULL, NULL, NULL, 'yaml', NULL, NULL);
COMMIT;

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='增加租户字段';

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT '秘钥',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info_beta';

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_info_tag';

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='config_tag_relation';

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_group_id` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='集群、各Group容量信息表';

-- ----------------------------
-- Records of group_capacity
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info` (
  `id` bigint unsigned NOT NULL,
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8_bin,
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8_bin COMMENT '秘钥',
  PRIMARY KEY (`nid`),
  KEY `idx_gmt_create` (`gmt_create`),
  KEY `idx_gmt_modified` (`gmt_modified`),
  KEY `idx_did` (`data_id`)
) ENGINE=InnoDB AUTO_INCREMENT=64 DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='多租户改造';

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
BEGIN;
INSERT INTO `his_config_info` VALUES (5, 42, 'jcloud-test.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 8.219.146.101:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 8.219.146.101:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://1.13.159.90:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 1.13.159.90\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  auth:\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin,/test,/api,/user/list,/actuator,/actuator/**,/web/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '700adf9caa1749be65986279021284f1', '2022-11-10 18:13:52', '2022-11-10 04:13:52', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (12, 43, 'jcloud-upms.yml', 'DEFAULT_GROUP', '', '\nspring:\n    mvc:\n        pathmatch:\n            #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n            matching-strategy: ant_path_matcher\n    config:\n        import:\n            - optional:nacos:seata-client-test.yml\n    cloud:\n        sentinel:\n            datasource:\n                ds1:\n                    nacos:\n                        # nacos dataId\n                        data-id: jwk-sentinel\n                        # 数据格式-json\n                        data-type: json\n                        # nacos 配置组\n                        group-id: DEFAULT_GROUP\n                        # 限流模式-流控模式\n                        rule-type: flow\n                        # nacos url\n                        server-addr: 8.219.146.101:8848\n            # 懒加载\n            eager: true\n            enabled: true\n            transport:\n                # 指定控制台和客户端交互的端口。默认是8719\n                # port: 8094\n                #指定sentinel控制台\n                dashboard: 8.219.146.101:8080\n                # 指定客户端ip\n                # clientIp: 192.168.0.107\n    datasource:\n        driver-class-name: com.mysql.cj.jdbc.Driver\n        druid:\n            #连接池初始化大小\n            initial-size: 5\n            #最大连接数\n            max-active: 20\n            #最小空闲连接数\n            min-idle: 10\n            stat-view-servlet:\n                #访问监控网页的登录用户名和密码\n                login-password: druid\n                login-username: druid\n            web-stat-filter:\n                #不统计这些请求数据\n                exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n        # mysql配置\n        url: jdbc:mysql://1.13.159.90:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n        username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n        password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n    main:\n        #开启允许重复注册，或者在@FeignClient指定contextId，\n        # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n        allow-bean-definition-overriding: true\n        allow-circular-references: true\n    rabbitmq:\n        addresses: 127.0.0.1\n        password: guest\n        username: guest\n        virtual-host: /\n        # publisher-confirm-type: correlated\n        # publisher-returns: true\n    redis:\n        host: 1.13.159.90\n\n    servlet:\n        multipart:\n            #开启文件上传\n            enabled: true\n            #限制文件上传大小为10M\n            max-file-size: 100MB\n    # thymeleaf配置\n    thymeleaf:\n        cache: false\n        suffix: .html\n\n\n\nknife4j:\n    # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n    # 是否开启Knife4j增强模式\n    enable: true\n    setting:\n        # 是否开启动态参数调试功能\n        enableDynamicParameter: true\n        # 是否显示Footer\n        enableFooter: false\n        # 前端UI的个性化配置\n        enableSwaggerModels: true\n        # 是否显示OpenAPI规范\n        enableOpenApi: false\n        enableVersion: true\n        swaggerModelName: 响应实体对象\n\nmybatis-plus:\n    configuration:\n        # SQL查询超时时间(单位：秒)\n        default-statement-timeout: 15\n        # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n        map-underscore-to-camel-case: true\n    global-config:\n        # 关闭图标打印\n        banner: false\n        #dao层xml路径\n    mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n    # config-location: classpath:mybatis-config.xml\nfeign:\n    client:\n        config:\n            default:\n                connect-timeout: 120000\n                read-timeout: 120000\n    sentinel:\n        enabled: true\n\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n    encryptor:\n        password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'de2ffe1fef8078ea7b33bb5d529e1afe', '2022-11-10 18:14:32', '2022-11-10 04:14:32', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (5, 44, 'jcloud-test.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 8.219.146.101:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 8.219.146.101:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 1.13.159.90\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  auth:\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin,/test,/api,/user/list,/actuator,/actuator/**,/web/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'd3bd42136cd606592fc36c1cef5dc17b', '2022-11-10 19:21:46', '2022-11-10 05:21:46', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (27, 45, 'jcloud-uaa.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 8.219.146.101:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 8.219.146.101:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://1.13.159.90:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 1.13.159.90\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  swagger:\n    description: Uaa服务\n    group-name: ${spring.application.name}\n    title: ${spring.application.name}\n  auth:\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin/**,/inner/**,/login,/oauth/**,/api,/jwk/**,/actuator/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'eb4bfabc2ec7492569876e6c0f33fd80', '2022-11-16 17:40:00', '2022-11-16 03:40:00', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 46, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 1.13.159.90\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '621376504bb1227fd68d20880c5f8972', '2022-11-22 19:24:39', '2022-11-22 05:24:39', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 47, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 1.13.159.90\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeGatewayFilter\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n  ignore-clients:\n    - test\n    - client\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '70d7161403114f83f4671d0edbfbd38f', '2022-11-22 19:33:35', '2022-11-22 05:33:36', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 48, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 1.13.159.90\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeGatewayFilter\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n  ignore-clients:\n    - test\n    - client\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '70d7161403114f83f4671d0edbfbd38f', '2022-11-22 19:34:11', '2022-11-22 05:34:12', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 49, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 1.13.159.90\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeGatewayFilter\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\n# gateway:\n#   encode-key: \'thanks,pig4cloud\'\n#   ignore-clients:\n#     - test\n#     - client\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'bff8402e83b3d504e1850772fcd077ab', '2022-11-22 19:34:49', '2022-11-22 05:34:50', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 50, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeGatewayFilter\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\n# gateway:\n#   encode-key: \'thanks,pig4cloud\'\n#   ignore-clients:\n#     - test\n#     - client\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '26d680f5f1b63fff15aea7a0c6164204', '2022-11-22 19:35:57', '2022-11-22 05:35:58', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 51, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\n# gateway:\n#   encode-key: \'thanks,pig4cloud\'\n#   ignore-clients:\n#     - test\n#     - client\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'dca5d8a6439cc2a9d5d7c3d7b01b7d58', '2022-11-22 20:03:18', '2022-11-22 06:03:18', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 52, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n  ignore-clients:\n    - test\n    - client\n    - jiwkClient\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'eaf5fc7ffafbddb0f66850e0c58b8649', '2022-11-22 20:04:10', '2022-11-22 06:04:10', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 53, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\n# gateway:\n#   encode-key: \'thanks,pig4cloud\'\n#   ignore-clients:\n#     - test\n#     - client\n#     - jiwkClient\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '50216e3ff2d52863a302018e68adcef8', '2022-11-22 20:08:01', '2022-11-22 06:08:02', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (16, 54, 'jcloud-gateway.yml', 'DEFAULT_GROUP', '', '\nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 5000\nlogging:\n  level:\n    root: debug\nribbon:\n  #请求连接超时时间\n  ConnectTimeout: 60000\n  #对当前实例的重试次数\n  MaxAutoRetries: 0\n  #切换实例的重试次数\n  MaxAutoRetriesNextServer: 1\n  #请求处理的超时时间\n  ReadTimeout: 60000\nspring:\n  redis:\n    host: 127.0.0.1\n    port: 6379\n    timeout: 20000\n    #    集群环境打开下面注释，单机不需要打开\n    #    cluster:\n    #      集群信息\n    #      nodes: xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx,xxx.xxx.xxx.xxx:xxxx\n    #      #默认值是5 一般当此值设置过大时，容易报：Too many Cluster redirections\n    #      maxRedirects: 3\n    pool:\n      max-active: 8\n      min-idle: 0\n      max-idle: 8\n      max-wait: -1\n    password:\n    sentinel:\n      enabled: true\n      transport:\n        clientIp: 192.168.0.107\n        dashboard: 127.0.0.1:8080\n        port: 8093\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        - id: jwk-security\n          predicates:\n            #            - args[pattern]: /jwk-security/inner/**\n            - name: Path\n          uri: lb://jwk-security/inner/**\n        - id: lease-route\n          predicates:\n            - name: Path\n          uri: lb://uhomecp-lease\n        # 认证中心\n        - id: pig-auth\n          uri: lb://jcloud-uaa\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://jcloud--upms\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n#   ignore-clients:\n#     - test\n#     - client\n#     - jiwkClient\n\ngateway:\n  dynamicRoute:\n    dataId: jwk-routes\n    dataType: nacos\n    enabled: true\n    group: DEFAULT_GROUP\n    readTimeout: 10000\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'dcdc42d2e9281c63772041229699ba05', '2022-11-22 20:08:37', '2022-11-22 06:08:37', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (27, 55, 'jcloud-uaa.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 127.0.0.1:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 127.0.0.1:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 127.0.0.1\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  swagger:\n    description: Uaa服务\n    group-name: ${spring.application.name}\n    title: ${spring.application.name}\n  auth:\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin/**,/inner/**,/login,/oauth/**,/api,/jwk/**,/actuator/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '9ba41ca01faed0d16756e319963a2795', '2022-11-25 10:19:41', '2022-11-24 20:19:41', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (27, 56, 'jcloud-uaa.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 127.0.0.1:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 127.0.0.1:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 127.0.0.1\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  swagger:\n    description: Uaa服务\n    group-name: ${spring.application.name}\n    title: ${spring.application.name}\n  auth: \n    default-password: 123456\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin/**,/inner/**,/login,/oauth/**,/api,/jwk/**,/actuator/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', '8b2bb642423012183d2e5944090ccc2d', '2022-11-25 10:30:42', '2022-11-24 20:30:43', 'nacos', '172.17.0.1', 'U', '', NULL);
INSERT INTO `his_config_info` VALUES (1, 57, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 加解密根密码\njasypt:\n  encryptor:\n    password: pig #根密码\n    \n# Spring 相关\nspring:\n  cache:\n    type: redis\n  redis:\n    host: 127.0.0.1\n  cloud:\n    sentinel:\n      eager: true\n      transport:\n        dashboard: pig-sentinel:5003\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"  \n  endpoint:\n    health:\n      show-details: ALWAYS\n\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# mybaits-plus配置\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      id-type: auto\n      table-underline: true\n      logic-delete-value: 1\n      logic-not-delete-value: 0\n  configuration:\n    map-underscore-to-camel-case: true\n\n# spring security 配置\nsecurity:\n  oauth2:\n    # 通用放行URL，服务个性化，请在对应配置文件覆盖\n    ignore:\n      urls:\n        - /v3/api-docs\n        - /actuator/**\n\n# swagger 配置\nswagger:\n  enabled: true\n  title: Pig Swagger API\n  gateway: http://${GATEWAY_HOST:pig-gateway}:${GATEWAY-PORT:9999}\n  token-url: ${swagger.gateway}/auth/oauth2/token\n  scope: server\n  services:\n    pig-upms-biz: admin\n    pig-codegen: gen', 'b8ee4f669bf4a8ffa6820e0d61afeb2d', '2022-12-02 16:28:04', '2022-12-02 02:28:05', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (2, 58, 'pig-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\nspring:\n  freemarker:\n    allow-request-override: false\n    allow-session-override: false\n    cache: true\n    charset: UTF-8\n    check-template-location: true\n    content-type: text/html\n    enabled: true\n    expose-request-attributes: false\n    expose-session-attributes: false\n    expose-spring-macro-helpers: true\n    prefer-file-system-access: true\n    suffix: .ftl\n    template-loader-path: classpath:/templates/', '74f53b71c7799aa754da75662378b93c', '2022-12-02 16:28:08', '2022-12-02 02:28:09', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (3, 59, 'pig-codegen-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(27v1agvAug87ANOVnbKdsw==)\n      client-secret: ENC(VbnkopxrwgbFVKp+UxJ2pg==)\n      scope: server\n\n# 数据源配置\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: root\n    url: jdbc:mysql://pig-mysql:3306/pig_codegen?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n', '400dfdf6b755625bb5363eda2e85e2a0', '2022-12-02 16:28:12', '2022-12-02 02:28:12', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (4, 60, 'pig-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  cloud:\n    gateway:\n      locator:\n        enabled: true\n      routes:\n        # 认证中心\n        - id: pig-auth\n          uri: lb://pig-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - ValidateCodeGatewayFilter\n            # 前端密码解密\n            - PasswordDecoderFilter\n        #UPMS 模块\n        - id: pig-upms-biz\n          uri: lb://pig-upms-biz\n          predicates:\n            - Path=/admin/**\n          filters:\n            # 限流配置\n            - name: RequestRateLimiter\n              args:\n                key-resolver: \'#{@remoteAddrKeyResolver}\'\n                redis-rate-limiter.replenishRate: 100\n                redis-rate-limiter.burstCapacity: 200\n        # 代码生成模块\n        - id: pig-codegen\n          uri: lb://pig-codegen\n          predicates:\n            - Path=/gen/**\n        # 固定路由转发配置 无修改\n        - id: openapi\n          uri: lb://pig-gateway\n          predicates:\n            - Path=/v3/api-docs/**\n          filters:\n            - RewritePath=/v3/api-docs/(?<path>.*), /$\\{path}/$\\{path}/v3/api-docs\n\ngateway:\n  encode-key: \'thanks,pig4cloud\'\n  ignore-clients:\n    - test\n    - client', '000988cf0102382d3f23df35027b47fd', '2022-12-02 16:28:15', '2022-12-02 02:28:15', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (5, 61, 'jcloud-test.yml', 'DEFAULT_GROUP', '', '\nspring:\n  mvc:\n    pathmatch:\n    #因为Springfox 使用的路径匹配是基于AntPathMatcher的，而Spring Boot 2.6.X +使用的是PathPatternMatcher。\n      matching-strategy: ant_path_matcher\n  config:\n    import:\n      - optional:nacos:seata-client-test.yml\n  cloud:\n    sentinel:\n      datasource:\n        ds1:\n          nacos:\n            data-id: jwk-sentinel\n            data-type: json\n            group-id: DEFAULT_GROUP\n            rule-type: flow\n            server-addr: 8.219.146.101:8848\n      # 懒加载\n      eager: true\n      enabled: true\n      transport:\n        # 指定控制台和客户端交互的端口。默认是8719\n        # port: 8094\n        #指定sentinel控制台\n        dashboard: 8.219.146.101:8080\n        # 指定客户端ip\n        # clientIp: 192.168.0.107\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    druid:\n      #连接池初始化大小\n      initial-size: 5\n      #最大连接数\n      max-active: 20\n      #最小空闲连接数\n      min-idle: 10\n      stat-view-servlet:\n        #访问监控网页的登录用户名和密码\n        login-password: druid\n        login-username: druid\n      web-stat-filter:\n        #不统计这些请求数据\n        exclusions: \'*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\'\n    # mysql配置\n    url: jdbc:mysql://127.0.0.1:3306/jcloud?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&rewriteBatchedStatements=true&useSSL=false&allowPublicKeyRetrieval=true\n    username: ENC(VDQ+iMuzXNSH2IcdJZJmsg==)\n    password: ENC(01URcvcwZUZ8msNQEceP4Cgxf2JEypmt)\n  main:\n    #开启允许重复注册，或者在@FeignClient指定contextId，\n    # 如@FeignClient(name = \"jwk-gateway\", path = \"/jwk-security\",contextId = \"jwk-gateway\")\n    allow-bean-definition-overriding: true\n    allow-circular-references: true\n  rabbitmq:\n    addresses: 127.0.0.1\n    password: guest\n    username: guest\n    virtual-host: /\n    # publisher-confirm-type: correlated\n    # publisher-returns: true\n  redis:\n    host: 1.13.159.90\n\n  servlet:\n    multipart:\n      #开启文件上传\n      enabled: true\n      #限制文件上传大小为10M\n      max-file-size: 100MB\n  # thymeleaf配置    \n  thymeleaf:\n    cache: false\n    suffix: .html\n\n\n\njwk:\n  auth:\n    #token过期时间,单位毫秒\n    expire-sec: 86400000\n    # 免鉴权URL\n    noauth-url: /admin,/test,/api,/user/list,/actuator,/actuator/**,/web/**,/**\n    #加密密钥\n    secret-key: jiwk\n    # token请求头\n    token-header: Authorization\n    # token schema前缀\n    token-schema: Bearer\n  prometheus:\n    zookeeper:\n      address: 127.0.0.1:2181\n      namespace: /jwk/prometheus\n    application: ${spring.application.name}\n    registry-mode: zookeeper\n  redis:\n    lettuce:\n      cluster:\n        refresh:\n          period: 60s\n#            jwk.redis.timeout=60s\n          ##拓扑刷新\n          #jwk.redis.lettuce.cluster.refresh.period=60s\n          #jwk.redis.lettuce.cluster.refresh.adaptive=true\n          adaptive: true\n      pool:\n        enabled: true\n        max-active: 120\n        min-idle: 6\n        max-idle: 60    \nknife4j:\n  # Knife4j相关属性配置(具体配置可参考：https://xiaoym.gitee.io/knife4j/documentation/enhance.html)\n  # 是否开启Knife4j增强模式\n  enable: true\n  setting:\n    # 是否开启动态参数调试功能\n    enableDynamicParameter: true\n    # 是否显示Footer\n    enableFooter: false\n    # 前端UI的个性化配置\n    enableSwaggerModels: true\n    # 是否显示OpenAPI规范\n    enableOpenApi: false\n    enableVersion: true\n    swaggerModelName: 响应实体对象\n    \nmybatis-plus:\n  configuration:\n  # SQL查询超时时间(单位：秒)\n    default-statement-timeout: 15\n    # 开启驼峰命名法,数据库表与实体类属性的驼峰命名自动转换\n    map-underscore-to-camel-case: true\n  global-config:\n  # 关闭图标打印\n    banner: false\n    #dao层xml路径\n  mapper-locations: classpath*:com/jwk/down/web/dao/*.xml\n  # config-location: classpath:mybatis-config.xml\nfeign:\n  client:\n    config:\n      default:\n        connect-timeout: 120000\n        read-timeout: 120000\n  sentinel:\n    enabled: true\n\n#启动时添加加密salt -Djasypt.encryptor.password=123456    \njasypt:\n  encryptor:\n    password: 123456\n\nmanagement:\n  endpoints:\n    health:\n      show-details: always\n    web:\n      exposure:\n        include: \'*\'', 'a7ddf23c661aa62b4926f579bf7f2180', '2022-12-02 16:28:18', '2022-12-02 02:28:18', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (6, 62, 'pig-upms-biz-dev.yml', 'DEFAULT_GROUP', '', 'security:\n  oauth2:\n    client:\n      client-id: ENC(imENTO7M8bLO38LFSIxnzw==)\n      client-secret: ENC(i3cDFhs26sa2Ucrfz2hnQw==)\n      scope: server\n\n# 数据源\nspring:\n  datasource:\n    type: com.zaxxer.hikari.HikariDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Awert159\n    url: jdbc:mysql://127.0.0.1:3306/pig?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&allowPublicKeyRetrieval=true\n\n# 文件上传相关 支持阿里云、华为云、腾讯、minio\noss:\n  endpoint: http://minio.pig4cloud.com\n  accessKey: lengleng\n  secretKey: lengleng\n  bucket-name: tmp', '619eac9ca7cc8e1ef0d574177806cab4', '2022-12-02 16:28:21', '2022-12-02 02:28:21', 'nacos', '172.17.0.1', 'D', '', NULL);
INSERT INTO `his_config_info` VALUES (7, 63, 'pig-monitor-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  autoconfigure:\n    exclude: com.pig4cloud.pig.common.core.config.JacksonConfiguration\n  # 安全配置\n  security:\n    user:\n      name: ENC(8Hk2ILNJM8UTOuW/Xi75qg==)     # pig\n      password: ENC(o6cuPFfUevmTbkmBnE67Ow====) # pig\n', '650bdfa15f60f3faa84dfe6e6878b8cf', '2022-12-02 16:28:24', '2022-12-02 02:28:25', 'nacos', '172.17.0.1', 'D', '', NULL);
COMMIT;

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions` (
  `role` varchar(50) NOT NULL,
  `resource` varchar(255) NOT NULL,
  `action` varchar(8) NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of permissions
-- ----------------------------
BEGIN;
INSERT INTO `permissions` VALUES ('ROLE_ADMIN', ':*:*', 'rw');
COMMIT;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles` (
  `username` varchar(50) NOT NULL,
  `role` varchar(50) NOT NULL,
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of roles
-- ----------------------------
BEGIN;
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');
COMMIT;

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='租户容量信息表';

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8_bin COMMENT='tenant_info';

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
BEGIN;
COMMIT;

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `username` varchar(50) NOT NULL,
  `password` varchar(500) NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- ----------------------------
-- Records of users
-- ----------------------------
BEGIN;
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);
COMMIT;

SET FOREIGN_KEY_CHECKS = 1;
